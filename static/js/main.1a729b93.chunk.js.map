{"version":3,"sources":["components/TopPanel.js","containers/App.js","reportWebVitals.js","index.js"],"names":["TopPanel","props","className","id","type","onClick","onNewGameClick","passByValue","object","JSON","parse","stringify","isFullyMerged","column","boardSize","k","mergeDupes","i","removeZeros","shiftingArray","slice","every","item","length","shift","splice","concat","empty","App","initializeBoard","isFirstRun","clearBoard","state","currentBoard","arr","numInitialCells","r","Math","floor","random","indexOf","push","newBoard","forEach","cellID","row","drawBoard","element","textNode","p","j","document","querySelector","createTextNode","createElement","appendChild","childElementCount","console","log","firstChild","removeChild","removeAttribute","classList","add","newGameClicked","findPressedKey","event","keyCode","moveLeft","moveUp","moveRight","moveDown","board","isWon","this","addEventListener","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a729b93.chunk.js","sourcesContent":["import \"./TopPanel.css\";\r\n\r\nconst TopPanel = (props) => {\r\n  return (\r\n    <div className=\"top-panel container d-flex justify-content-center\">\r\n      <div className=\"row\">\r\n        {/* left side */}\r\n        <div id=\"logo\" className=\"w-50\">\r\n          <p>2048</p>\r\n          <p className=\"phrase\">How high can you get?</p>\r\n        </div>\r\n        {/* right side */}\r\n        <div className=\"d-flex flex-column align-items-end w-50\">\r\n          <div className=\"score-div\">\r\n            <p id=\"score-label\">SCORE</p>\r\n            <p id=\"score-counter\">1425</p>\r\n          </div>\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              id=\"btn-new-game\"\r\n              className=\"btn\"\r\n              onClick={props.onNewGameClick}\r\n            >\r\n              NEW GAME\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopPanel;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"tachyons\";\nimport TopPanel from \"../components/TopPanel.js\";\n// import \"../fonts/ClearSans-Medium.ttf\";\n\nconst passByValue = (object) => {\n  return JSON.parse(JSON.stringify(object));\n};\n\nconst isFullyMerged = (column, boardSize) => {\n  for (var k = 0; k < boardSize - 1; k++) {\n    if (column[k] === column[k + 1] && column[k] !== 0) return false;\n  }\n  return true;\n};\n\nconst mergeDupes = (column, boardSize) => {\n  while (!isFullyMerged(column, boardSize)) {\n    for (var i = 0; i < boardSize - 1; i++) {\n      if (column[i] !== 0) {\n        while (column[i + 1] === column[i]) {\n          column[i] += 1;\n          column[i + 1] = 0;\n          column = passByValue(removeZeros(column, boardSize));\n        }\n      }\n    }\n  }\n  return column;\n};\n\nconst removeZeros = (column, boardSize) => {\n  for (var i = 0; i < boardSize - 1; i++) {\n    var shiftingArray = column.slice(i, boardSize);\n    while (shiftingArray[0] === 0) {\n      if (shiftingArray.every((item) => item === 0)) break;\n      shiftingArray[shiftingArray.length] = 0;\n      shiftingArray.shift();\n    }\n    column.splice(i, shiftingArray.length);\n    column = column.concat(shiftingArray);\n  }\n  return column;\n};\n\nconst empty = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.boardSize = 4;\n    this.numInitialCells = 10;\n    this.state = {\n      currentBoard: passByValue(empty),\n      isWon: false,\n    };\n  }\n\n  initializeBoard = (isFirstRun = false) => {\n    if (!isFirstRun) {\n      this.clearBoard();\n    }\n    this.state.currentBoard = passByValue(empty);\n\n    var arr = [];\n    while (arr.length < this.numInitialCells) {\n      var r = Math.floor(Math.random() * this.boardSize ** 2);\n      if (arr.indexOf(r) === -1) arr.push(r);\n    }\n    var newBoard = passByValue(this.state.currentBoard);\n    arr.forEach((cellID) => {\n      var column = cellID % this.boardSize;\n      var row = (cellID - column) / this.boardSize;\n      r = Math.random();\n      if (r < 0.1) {\n        newBoard[row][column] = 2;\n      } else {\n        newBoard[row][column] = 1;\n      }\n    });\n    this.state.currentBoard = passByValue(newBoard);\n  };\n\n  drawBoard = () => {\n    var element, textNode, p;\n    for (var i = 0; i < this.boardSize; i++) {\n      for (var j = 0; j < this.boardSize; j++) {\n        element = document.querySelector(`#cell-${i}-${j}`);\n        if (this.state.currentBoard[i][j] !== 0) {\n          textNode = document.createTextNode(\n            2 ** this.state.currentBoard[i][j]\n          );\n          p = document.createElement(\"div\");\n          p.appendChild(textNode);\n\n          if (element.childElementCount !== 0) {\n            console.log(element.childElementCount, element, element.firstChild);\n            element.removeChild(element.firstChild);\n            console.log(element.childElementCount, element, element.firstChild);\n          }\n          element.appendChild(p);\n        }\n        element.removeAttribute(\"class\");\n        element.classList.add(\"game-cell\");\n        element.classList.add(`cell-${this.state.currentBoard[i][j]}`);\n      }\n    }\n  };\n\n  clearBoard = () => {\n    var element;\n    for (var i = 0; i < this.boardSize; i++) {\n      for (var j = 0; j < this.boardSize; j++) {\n        if (this.state.currentBoard[i][j] !== 0) {\n          element = document.querySelector(`#cell-${i}-${j}`);\n          if (element.childElementCount !== 0)\n            element.removeChild(element.firstChild);\n        }\n      }\n    }\n  };\n\n  newGameClicked = () => {\n    this.initializeBoard(false);\n    this.drawBoard();\n  };\n\n  componentDidMount() {\n    this.initializeBoard();\n    this.drawBoard();\n    document.addEventListener(\"keydown\", this.findPressedKey);\n  }\n\n  findPressedKey = (event) => {\n    switch (event.keyCode) {\n      case 37:\n        this.moveLeft();\n        break;\n      case 38:\n        this.moveUp();\n        break;\n      case 39:\n        this.moveRight();\n        break;\n      case 40:\n        this.moveDown();\n        break;\n      default:\n        break;\n    }\n  };\n\n  moveUp = () => {\n    var board = passByValue(this.state.currentBoard);\n    var newBoard = passByValue(empty);\n    for (var j = 0; j < this.boardSize; j++) {\n      var column = [];\n\n      for (var i = 0; i < this.boardSize; i++) {\n        column.push(board[i][j]);\n      }\n\n      // Move all non-zeros to the left\n      column = removeZeros(column, this.boardSize);\n      // Merge duplicates\n      column = mergeDupes(column, this.boardSize);\n      for (i = 0; i < column.length; i++) {\n        newBoard[i][j] = column[i];\n      }\n    }\n    this.state.currentBoard = passByValue(newBoard);\n    // this.clearBoard();\n    this.drawBoard();\n  };\n\n  render() {\n    return (\n      <div className=\"container d-flex flex-column align-items-center\">\n        <TopPanel onNewGameClick={this.newGameClicked} />\n        <div className=\"container d-flex justify-content-center align-items-center h-100\">\n          <div id=\"game-grid\" className=\"\">\n            <div className=\"game-cell\" id=\"cell-0-0\"></div>\n            <div className=\"game-cell\" id=\"cell-0-1\"></div>\n            <div className=\"game-cell\" id=\"cell-0-2\"></div>\n            <div className=\"game-cell\" id=\"cell-0-3\"></div>\n            <div className=\"game-cell\" id=\"cell-1-0\"></div>\n            <div className=\"game-cell\" id=\"cell-1-1\"></div>\n            <div className=\"game-cell\" id=\"cell-1-2\"></div>\n            <div className=\"game-cell\" id=\"cell-1-3\"></div>\n            <div className=\"game-cell\" id=\"cell-2-0\"></div>\n            <div className=\"game-cell\" id=\"cell-2-1\"></div>\n            <div className=\"game-cell\" id=\"cell-2-2\"></div>\n            <div className=\"game-cell\" id=\"cell-2-3\"></div>\n            <div className=\"game-cell\" id=\"cell-3-0\"></div>\n            <div className=\"game-cell\" id=\"cell-3-1\"></div>\n            <div className=\"game-cell\" id=\"cell-3-2\"></div>\n            <div className=\"game-cell\" id=\"cell-3-3\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}